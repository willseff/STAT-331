p <- matrix(c(0.9,0.18,0,0,0,0.74,0.18,0,0,0.08,0.74,0.18,0.1,0,0.08,0.82), nrow = 4)
diag(4)-p
solve(diag(4)-p)
diag(4)-p
p
diag(4)
ip <- diag(4)-p
ip <- diag(4)-p
solve(ip)
knitr::opts_chunk$set(echo = TRUE)
# read data
Y <- read.delim('a3q3.txt', header=T)
# fit model
m <- lm(Y$Y~X)
# read data
Y <- read.delim('a3q3.txt', header=T)
# fit model
#m <- lm(Y$Y~X)
summary(m)
# read data
Y <- read.delim('a3q3.txt', header=T)
# fit model
#m <- lm(Y$Y~X)
#summary(m)
#confint(m)
Y
# read data
Y <- read.delim('a3q3.txt', header=T)
# fit model
m <- lm(Y$Y~X)
# read data
Y <- read.delim('a3q3.txt', header=T)
# fit model
#m <- lm(Y$Y~X)
#summary(m)
#confint(m)
X
knitr::opts_chunk$set(echo = TRUE)
X
Y <- read.delim('a3q3.txt', header=T)
read.delim('ex_q3.txt', header=TRUE)
read.delim('ex_q3.txt', header=TRUE)
read.delim('ex_q3.txt', header=TRUE)
setwd("~/Desktop/STAT 332")
read.delim('ex_q3.txt', header=TRUE)
data <- read.delim('ex_q3.txt', header=TRUE)
attach(data)
lm(USAGE~HOUR + PAYR + DAYS + PROD + TEMP)
m <- lm(USAGE~HOUR + PAYR + DAYS + PROD + TEMP)
summary(m)
m_h <- lm(USAGE ~ PROD + PAYR)
summary(m_all)
summary(m_h)
m_all <- lm(USAGE ~ HOUR + PAYR + DAYS + PROD + TEMP)
summary(m_all)
summary(m_h)
anova(m_all, m_h)
plot(USAGE,PROD)
plot(PROD,USAGE)
plot(PAYR,USAGE)
plot(PAYR,PROD)
m_all$cov.unscaled
vcov(m_all)
cov(PAYR,PROD)
lm(PAYR~PROD)
summary(lm(PAYR~PROD))
m_PAYR <- lm(USAGE ~ PAYR)
summary(m_PAYR)
summary(lm(PAYR~PROD))
summary(lm(USAGE~PROD))
summary(m_all)
summary(m_h)
summary(lm(USAGE~PAYR))
summary(m_h)
summary(lm(USAGE~PROD))
boxplot(USAGE)
summary(lm(USAGE~PROD))
summary(lm(USAGE~PAYR))
summary(m_h)
aov(m_h)
aov(summary(m_h))
anova(m_h)
summary(m_all)
m <- lm(USAGE ~ TEMP + PROD + PAYR)
summary(m)
read.delim('q6.txt', header = TRUE)
setwd("~/Documents/GitHub/STAT-331/Midterm")
read.delim('q6.txt', header = TRUE)
data <- read.delim('q6.txt', header = TRUE)
data
dim(data)
data <- read.delim('q6.txt', header = TRUE, sep = ',')
dim(data)
f1 <- data$x1 - data$x2 - data$x3
f2 <- data$x4 - 7*data$x2 - 2*data$x3
lm(y~ f1 + f2)
lm(data$y~ f1 + f2)
summary(m)
m <- lm(data$y~ f1 + f2)
summary(m)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
f1 <- data$x1 - data$x2 - data$x3
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r,m)
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r,m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r,m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1 + data$x1 -rnorm(1)*4
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r,m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1 + data$x1 -rnorm(1)*4
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r,m)
anova(m, m.r)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1 + data$x1 - rnorm(1)*4
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1 + data$x1 - rnorm(1)*4 +500
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
# feature engineering
# Beta_1
#f1 <- data$x1 - data$x2 - data$x3 + data$x1
f1 <- 4
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
# feature engineering
# Beta_1
#f1 <- data$x1 - data$x2 - data$x3 + data$x1
f1 <- 4
f2 <- rnorm(12)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
f1 <- 4
f2 <- rnorm(12)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
summary(m.r)
f1 <- 4
f2 <- 5
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
f1 <- rnorm(12)
f2 <- 5
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
data$y
m.r <- lm(data$y ~ f1 + f2)
len(data)
length(data)
length(data$y)
#f1 <- data$x1 - data$x2 - data$x3 + data$x1
f1 <- rnorm(13)
f2 <- rnorm(13)
m.r <- lm(data$y ~ f1 + f2)
summary(m.r)
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
length(data$y)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m, m.r)
anova(m.r, m)
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
anova(m.r, m)
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + data$x1 + data$x1 + data$x1 + data$x1 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + data$x1
m.r <- lm(data$y~ f1 + f2)
anova(m.r, m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 4*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
m.r <- lm(data$y~ f1 + f2)
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 4*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 100*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 1000*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 10000*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1 + 100000*rnorm(13)
f2 <- data$x4 - 7*data$x2 - 2*data$x3 + 10000*rnorm(13)
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
# feature engineering
# Beta_1
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
anova(m.r, m)
summary(m.r)
summary(m)
qt(0.975,12)
setwd("~/Documents/GitHub/MSCI-531")
read.matrix('p.txt')
read.table('p.txt')
as.matrix(read.table('p.txt'))
r.o <- matrix(c(1,1,1,1,1,1,1,1,0,0), ncol = 1)
View(r.o)
solve(diag(10) - 0.992*p)
p <- as.matrix(read.table('p.txt'))
solve(diag(10) - 0.992*p)
solve(diag(10) - 0.992*p) %*% r.o
v.o <- solve(diag(10) - 0.992*p) %*% r.o
p1 <- as.matrix(read.table('p1.txt'))
r.1 <- matrix(c(65,60,55,50,45,40,35,30,0,0), ncol = 1)
View(r.1)
p1 <- as.matrix(read.table('p1.txt'))
r.1 <- matrix(c(65,60,55,50,45,40,35,30,0,0), ncol = 1)
v.1 <- solve(diag(10) - 0.992*p.1) %*% r.1
p.1 <- as.matrix(read.table('p1.txt'))
r.1 <- matrix(c(65,60,55,50,45,40,35,30,0,0), ncol = 1)
v.1 <- solve(diag(10) - 0.992*p.1) %*% r.1
View(v.1)
p.2 <- as.matrix(read.table('p2.txt'))
r.2 <- matrix(c(1,1,55,50,45,40,35,30,0,0), ncol = 1)
v.2 <- solve(diag(10) - 0.992*p.2) %*% r.2
View(v.2)
View(v.1)
View(v.o)
View(v.2)
p.wait <- as.matrix(read.table('p.txt'))
View(p.wait)
p.wait[1]
p.wait[1,]
p.wait[1,]*v
v <- matrix(c(0,0,0,0,0,0,0,0,0,0))
p.wait <- as.matrix(read.table('p.txt'))
p.wait[1,]*v
r.trans[1]
r.trans <- as.matrix(c(65,60,55,50,45,40,35,30,0,0))
r.trans[1]
max(1 + p.wait[1,]*v,r.trans[1])
sapply(c(1:10),func)
function_name <- function(arg) {
return(max(1+p.wait[arg,]*v,r.trans[arg]))
}
sapply(c(1:10),func)
func <- function(arg) {
return(max(1+p.wait[arg,]*v,r.trans[arg]))
}
sapply(c(1:10),func)
func <- function(arg) {
if (arg >7) {return(0)}
return(max(1+p.wait[arg,]*v,r.trans[arg]))
}
sapply(c(1:10),func)
func <- function(arg) {
if (arg > 8) {return(0)}
return(max(1+p.wait[arg,]*v,r.trans[arg]))
}
sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
p.wait[1,]*v
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
p.wait[1,]*v
v.new <- sapply(c(1:10),func)
v <- matrix(c(0,0,0,0,0,0,0,0,0,0))
p.wait <- as.matrix(read.table('p.txt'))
r.trans <- as.matrix(c(65,60,55,50,45,40,35,30,0,0))
max(1 + p.wait[1,]*v,r.trans[1])
max(1 + p.wait[2,]*v,r.trans[2])
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
v <- sapply(c(1:10),func)
max(1 + p.wait[1,]*v,r.trans[1])
eplison <- 0.01
lambda <- 0.992
v <- matrix(c(0,0,0,0,0,0,0,0,0,0))
p.wait <- as.matrix(read.table('p.txt'))
r.trans <- as.matrix(c(65,60,55,50,45,40,35,30,0,0))
max(1 + p.wait[1,]*v,r.trans[1])
max(1 + p.wait[2,]*v,r.trans[2])
func <- function(arg) {
if (arg > 8) {return(0)}
return(max(1+0.992*p.wait[arg,]*v,r.trans[arg]))
}
v <- sapply(c(1:10),func)
p <- as.matrix(read.table('p.txt'))
r.o <- matrix(c(1,1,1,1,1,1,1,1,0,0), ncol = 1)
v.o <- solve(diag(10) - 0.992*p) %*% r.o
# second iteration
p.1 <- as.matrix(read.table('p1.txt'))
r.1 <- matrix(c(65,60,55,50,45,40,35,30,0,0), ncol = 1)
v.1 <- solve(diag(10) - 0.992*p.1) %*% r.1
View(v.1)
y <- 5*x + x2
x <- c(1,2,3,4,5,6,7,8,9,10)
x2 <- c(10,9,8,7,6,5,4,3,2,1)
y <- 5*x + x2
lm(y ~ x)
m <- lm(y ~ x)
resid(m)
y
plot(y,x)
y <- 5*x - x2
plot(y,x)
plot(x,y)
x <- c(1,2,3,4,5,6,7,8,9,10)
x2 <- c(10,3,4,1,8,5,4,2,2,8)
y <- 5*x - x2
plot(x,y)
m <- lm(y ~ x)
resid(m)
resid(m)
plot(resid(m))
setwd("~/Documents/GitHub/STAT-331/Midterm")
# compare models
anova(m.r, m)
data <- read.delim('q6.txt', header = TRUE, sep = ',')
# feature engineering
f1 <- data$x1 - data$x2 - data$x3 + data$x1
f2 <- data$x4 - 7*data$x2 - 2*data$x3
# model with restriction
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
# compare models
anova(m.r, m)
setwd("~/Documents/GitHub/STAT-331/Midterm")
data <- read.delim('q6.txt', header = TRUE, sep = ',')
setwd("~/Documents/GitHub/STAT-331/Midterm")
pf(30.06,3,12)
pf(0,3,12)
pf(1,3,12)
pf(30.06,3,12)
1-pf(30.06,3,12)
qf(30.06,3,12)
df(30.06,3,12)
pf(30.06,3,12)
pf(4000,2,17)
pf(5.091, 2, 9, lower.tail = FALSE)
pf(5.091, 2, 9)
1 - pf(5.091, 2, 9)
1 - pf(30.06,3,12)
# feature engineering
f1 <- data$x1 - data$x2 - data$x3
f2 <- data$x4 - (1/5)*data$x2 - (8/5)*data$x3
# model with restriction
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
# compare models
anova(m.r, m)
data <- read.delim('q6.txt', header = TRUE, sep = ',')
# feature engineering
f1 <- data$x1 - data$x2 - data$x3
f2 <- data$x4 + (1/5)*data$x2 - (8/5)*data$x3
# model with restriction
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
# compare models
anova(m.r, m)
data <- read.delim('q6.txt', header = TRUE, sep = ',')
# feature engineering
f1 <- data$x1 - data$x2 - data$x3
f2 <- data$x4 + (1/5)*data$x2 + (8/5)*data$x3
# model with restriction
m.r <- lm(data$y~ f1 + f2)
summary(m.r)
# model without restriction
m <- lm(data$y ~ data$x1 + data$x2 + data$x3 + data$x4)
summary(m)
# compare models
anova(m.r, m)
1- pf(24,3,12)
1- pf(24,2,12)
